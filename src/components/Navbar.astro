---
import { Image } from 'astro:assets';
import logo from '/public/assets/homepageAssets/logo.png';

const navItems = [
  { 
    label: "ABOUT",
    hasDropdown: true,
    dropdownItems: [
      { label: "About Us", href: "/about-us" },
      { label: "Our Team", href: "/team" },
      { label: "Board of Directors", href: "/board-of-directors" },
      { label: "Programs", href: "/amplio-ghana" },
      { label: "Global Partners", href: "/partners" },
      { label: "Financials", href: "/financial-and-990s"}
    ]
  },
  { 
    label: "SOLUTIONS", 
    hasDropdown: true,
    dropdownItems: [
      { label: "Why Talking Book", href: "/why-talking-books" },
      { label: "Our Technology", href: "/technology" },
      { label: "Basic Service Package", href: "/basic-service-package" },
      { label: "Consulting Services", href: "/consulting-services" },
      { label: "SBC Impact Designer", href: "/sbc" },
      { label: "Ways To Listen", href: "/ways-to-listen" },
    ]
  },
  { label: "IMPACT", href: "/impact" },
  { label: "BLOG", href: "/blog" },
  { 
    label: "RESOURCES",
    href: "/resources",
    hasDropdown: true,
    dropdownItems: [
      { label: "Case Studies", href: "/case-studies" },
      { label: "Videos", href: "/videos" },
      { label: "Guides and Brochures", href: "/guides-and-brochures" },
      { label: "Press", href: "/press" },
    ]
  },
  { label: "CONTACT", href: "/contact" },
];
---

<div class="sticky top-0 left-0 right-0 z-50">
  <nav class="bg-white border-b border-gray-300 transition-shadow duration-200">
    <div class="max-w-[2000px] mx-auto px-4 lg:px-56">
      <!-- Header -->
      <div class="flex justify-between items-center h-16 lg:h-28">
        <button 
          class="p-2 text-gray-700 lg:hidden"
          id="mobile-menu-button"
          aria-label="Toggle mobile menu"
          aria-expanded="false"
          aria-controls="mobile-menu"
        >
          <svg class="menu-icon w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
          </svg>
          <svg class="close-icon w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
          </svg>
        </button>

        <a href="/" class="flex items-center mx-auto lg:mx-0" aria-label="Go to homepage">
          <Image 
            src={logo}
            alt="Amplio"
            class="h-8 lg:h-16 w-auto"
            width={200}
            height={64}
            loading="eager"
          />
        </a>

        <a href="/donate" class="lg:hidden bg-[#EE8060] text-white px-4 py-2 text-sm rounded-md hover:bg-[#ff4a33] transition-colors">
          DONATE
        </a>

        <!-- Desktop Nav -->
        <div class="hidden lg:flex items-center space-x-4">
          {navItems.map((item) => (
            <div class="relative group">
              {item.hasDropdown ? (
                <button 
                  type="button"
                  class="text-gray-700 hover:text-emerald-600 text-[14px] transition-colors font-semibold flex items-center"
                  aria-expanded="false"
                  aria-controls={`dropdown-${item.label}`}
                >
                  {item.label}
                  <svg 
                    class="w-4 h-4 ml-1" 
                    fill="none" 
                    stroke="currentColor" 
                    viewBox="0 0 24 24"
                    aria-hidden="true"
                  >
                    <path 
                      stroke-linecap="round" 
                      stroke-linejoin="round" 
                      stroke-width="2" 
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                </button>
              ) : (
                <a
                  href={item.href}
                  class="text-gray-700 hover:text-emerald-600 text-[14px] transition-colors font-semibold"
                >
                  {item.label}
                </a>
              )}
              
              {item.hasDropdown && (
                <div 
                  id={`dropdown-${item.label}`}
                  class="absolute top-full left-0 mt-2 w-48 bg-white shadow-lg rounded-md opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200"
                  role="menu"
                >
                  {item.dropdownItems.map((dropdownItem) => (
                    <a
                      href={dropdownItem.href}
                      class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-emerald-600"
                      role="menuitem"
                    >
                      {dropdownItem.label}
                    </a>
                  ))}
                </div>
              )}
            </div>
          ))}
          
          <a
            href="/donate"
            class="bg-[#EE8060] text-white px-8 py-3 rounded-md hover:bg-[#ff4a33] transition-colors"
          >
            DONATE
          </a>
        </div>
      </div>
    </div>

    <!-- Mobile Menu Overlay -->
    <div
      class="lg:hidden hidden fixed inset-0 bg-white z-50 mt-16"
      id="mobile-menu"
      role="menu"
    >
      <div class="flex-1 overflow-y-auto p-4">
        {navItems.map((item) => (
          <div class="py-3 border-b border-gray-100 last:border-0">
            {item.hasDropdown ? (
              <>
                <button
                  type="button"
                  class="w-full text-left flex items-center justify-between text-gray-700 font-medium mobile-dropdown-button"
                  data-target={`mobile-dropdown-${item.label}`}
                  aria-expanded="false"
                  aria-controls={`mobile-dropdown-${item.label}`}
                >
                  <span>{item.label}</span>
                  <svg 
                    class="dropdown-icon w-5 h-5 text-gray-400" 
                    fill="none" 
                    stroke="currentColor" 
                    viewBox="0 0 24 24"
                  >
                    <path 
                      stroke-linecap="round" 
                      stroke-linejoin="round" 
                      stroke-width="2" 
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                </button>
                <div
                  class="hidden pl-4 mt-2 space-y-2"
                  id={`mobile-dropdown-${item.label}`}
                >
                  {item.dropdownItems.map((dropdownItem) => (
                    <a
                      href={dropdownItem.href}
                      class="block py-2 text-sm text-gray-600 hover:text-emerald-600"
                    >
                      {dropdownItem.label}
                    </a>
                  ))}
                </div>
              </>
            ) : (
              <a 
                href={item.href} 
                class="block text-gray-700 font-medium"
              >
                {item.label}
              </a>
            )}
          </div>
        ))}
      </div>
    </div>
  </nav>
</div>

<script>
  function toggleMenu(open: boolean) {
    const menu = document.getElementById('mobile-menu');
    const menuIcon = document.querySelector('.menu-icon');
    const closeIcon = document.querySelector('.close-icon');
    const body = document.body;
    
    if (open) {
      menu?.classList.remove('hidden');
      menuIcon?.classList.add('hidden');
      closeIcon?.classList.remove('hidden');
      body.style.overflow = 'hidden';
    } else {
      menu?.classList.add('hidden');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
      body.style.overflow = '';
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const nav = document.querySelector('nav');
    const dropdownButtons = document.querySelectorAll('.mobile-dropdown-button');
    
    dropdownButtons.forEach(button => {
      button.addEventListener('click', () => {
        const targetId = button.getAttribute('data-target');
        const dropdown = document.getElementById(targetId);
        const icon = button.querySelector('.dropdown-icon');
        
        if (dropdown && icon) {
          const isExpanded = button.getAttribute('aria-expanded') === 'true';
          button.setAttribute('aria-expanded', (!isExpanded).toString());
          dropdown.classList.toggle('hidden');
          icon.style.transform = isExpanded ? 'rotate(0deg)' : 'rotate(180deg)';
        }
      });
    });

    mobileMenuButton?.addEventListener('click', () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
      toggleMenu(!isExpanded);
    });

    window.addEventListener('scroll', () => {
      if (window.scrollY > 0) {
        nav?.classList.add('shadow-md');
      } else {
        nav?.classList.remove('shadow-md');
      }
    }, { passive: true });
  });
</script>

<style>
  nav {
    transition: box-shadow 0.3s ease-in-out;
  }

  #mobile-menu {
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
  }

  #mobile-menu.hidden {
    opacity: 0;
    pointer-events: none;
  }

  /* Scrollbar styles */
  #mobile-menu::-webkit-scrollbar {
    width: 4px;
  }

  #mobile-menu::-webkit-scrollbar-track {
    background: #f1f1f1;
  }

  #mobile-menu::-webkit-scrollbar-thumb {
    background: #888;
    border-radius: 2px;
  }

  .dropdown-icon {
    transition: transform 0.2s ease-in-out;
  }
</style>