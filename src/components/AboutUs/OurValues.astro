---
import {Image} from 'astro:assets'
import AboutUsImage from "../../assets/aboutUsPageAssets/about-values.jpg"

interface Value {
  title: string;
  description: string;
  link: string;
  linkText: string;
}

const values: Value[] = [
  {
    title: "PARTNERSHIP",
    description: "Through teamwork and collaboration, we more effectively reach and serve the world's most vulnerable communities.",
    link: "/global-partners",
    linkText: "GLOBAL PARTNERS"
  },
  {
    title: "RESPONSIBILITY",
    description: "We honor a commitment to continually improve our products and services to ensure partner and program success.",
    link: "/our-technology",
    linkText: "OUR TECHNOLOGY"
  },
  {
    title: "RESPECT",
    description: "We listen closely to the voices and views of others, especially those whom we serve, and value their feedback.",
    link: "/user-feedback",
    linkText: "USER FEEDBACK"
  },
  {
    title: "TRANSPARENCY",
    description: "We communicate openly, share information, and challenge each other's thinking and expectations to build trust.",
    link: "/financials",
    linkText: "FINANCIALS AND REPORTS"
  },
  {
    title: "LEARNING",
    description: "Individually and as a team, we try new ideas, learn from our successes and failures, and share what we learn with others.",
    link: "/webinars",
    linkText: "WEBINARS"
  }
];
---

<section class="w-full bg-white py-10 lg:py-20">
  <div class="max-w-[2000px] mx-auto px-4 sm:px-6 lg:px-56">
    <div class="text-center mb-16">
      <h2 class="text-3xl font-bold mb-3 lg:mb-6">
        Our Values
      </h2>
      <p class="text-md  max-w-3xl mx-auto">
        In our strategic planning and day-to-day work, we keep our values in mind and at heart.
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-3 gap-8 values-grid">
      {values.slice(0, 3).map((value, index) => (
        <div 
          class="value-card opacity-0 transform translate-y-10 transition-all duration-700 ease-out"
          data-index={index}
        >
          <div class="bg-blue-50 rounded-2xl p-8 h-full border border-blue-100 hover:shadow-lg transition-shadow">
            <h3 class="text-lg font-bold text-cyan-500 mb-4">
              {value.title}
            </h3>
            <p class="text-gray-700 mb-6 flex-grow">
              {value.description}
            </p>
            <a 
              href={value.link} 
              class="text-blue-600 hover:text-blue-800 font-semibold text-sm transition-colors"
            >
              {value.linkText}
            </a>
          </div>
        </div>
      ))}
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-8 values-grid">
      {values.slice(3).map((value, index) => (
        <div 
          class="value-card opacity-0 transform translate-y-10 transition-all duration-700 ease-out"
          data-index={index + 3}
        >
          <div class="bg-blue-50 rounded-2xl p-8 h-full border border-blue-100 hover:shadow-lg transition-shadow">
            <h3 class="text-lg font-bold text-cyan-500 mb-4">
              {value.title}
            </h3>
            <p class="text-gray-700 mb-6 flex-grow">
              {value.description}
            </p>
            <a 
              href={value.link} 
              class="text-blue-600 hover:text-blue-800 font-semibold text-sm transition-colors"
            >
              {value.linkText}
            </a>
          </div>
        </div>
      ))}
    </div>

    <div class="mt-12 relative w-screen left-1/2 right-1/2 ml-[-50vw] mr-[-50vw]">
      <div class="w-full relative">
        <div class="aspect-[16/9] md:aspect-[21/9]">
          <Image 
            src={AboutUsImage}
            alt="People sharing knowledge with Amplio device"
            class="w-full h-full object-contain md:object-cover"
            width={2000}
            height={1000}
            quality={80}
            format="webp"
            loading="eager"
            decoding="async"
          />
        </div>
      </div>
    </div>
</section>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const valueCards = document.querySelectorAll('.value-card');
    
    const observerOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 0.1
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          setTimeout(() => {
            entry.target.classList.remove('opacity-0', 'translate-y-10');
            entry.target.classList.add('opacity-100', 'translate-y-0');
          }, entry.target.dataset.index * 200);
        }
      });
    }, observerOptions);

    valueCards.forEach(card => observer.observe(card));
  });
</script>

<style>
  @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

  :root {
    font-family: 'Inter', sans-serif;
  }
</style>