---
import { Icon } from '@iconify/react';
import Layout from '../../layouts/Layout.astro';
import { MoreVertical, Share2 } from 'lucide-react';
import { 
  PAYLOAD_URL, 
  transformPost, 
  formatDate, 
  fetchCategories,
  renderContentNode 
} from '../../utils/blog';
import type { Post, ApiResponse } from '../../types/payload';

// Get the post ID from the URL parameters
const { id } = Astro.params;

// If no ID is provided, redirect to the blog page
if (!id) {
  return Astro.redirect('/blog');
}

// Fetch the post data
const post = await getPost(id);

// If no post is found, return a 404 response
if (!post) {
  return new Response('Post not found', {
    status: 404,
    statusText: 'Not Found'
  });
}

// Fetch the post data server-side
const searchParams = new URL(Astro.request.url).searchParams;
const searchQuery = searchParams.get('search') || '';
const currentCategory = searchParams.get('category') || '';

// Fetch post data
async function getPost(id: string) {
  try {
    const response = await fetch(`${PAYLOAD_URL}/api/posts/${id}`);
    if (!response.ok) throw new Error('Failed to fetch post');
    const post = await response.json();
    return transformPost(post);
  } catch (error) {
    console.error('Error fetching post:', error);
    return null;
  }
}

// Fetch related posts based on category and search
async function getRelatedPosts(categorySlug: string, search: string, currentPostId: string) {
  try {
    const params = new URLSearchParams();
    params.append('depth', '2');
    
    if (categorySlug) {
      params.append('where[category.slug][equals]', categorySlug);
    }
    
    if (search) {
      params.append('where[or][0][title][contains]', search);
      params.append('where[or][1][content][contains]', search);
      params.append('where[or][2][category.name][contains]', search);
    }
    
    params.append('where[id][not-equals]', currentPostId);
    params.append('limit', '3');  // Limit to 3 related posts
    
    const response = await fetch(`${PAYLOAD_URL}/api/posts?${params.toString()}`);
    if (!response.ok) throw new Error('Failed to fetch related posts');
    const data: ApiResponse = await response.json();
    return data.docs.map(transformPost);
  } catch (error) {
    console.error('Error fetching related posts:', error);
    return [];
  }
}

const categories = await fetchCategories();
const relatedPosts = await getRelatedPosts(
  post?.category?.slug || '',
  searchQuery,
  id
);

const mainCategories = categories.slice(0, 3);
const moreCategories = categories.slice(3);

const contentHtml = post?.content.root.children
  .map(node => renderContentNode(node))
  .join('');

// search context message
const getSearchContext = () => {
  if (searchQuery && currentCategory) {
    return `${relatedPosts.length} related posts found in "${categories.find(c => c.slug === currentCategory)?.name}" for "${searchQuery}"`;
  } else if (searchQuery) {
    return `${relatedPosts.length} related posts found for "${searchQuery}"`;
  } else if (currentCategory) {
    return `${relatedPosts.length} related posts in "${categories.find(c => c.slug === currentCategory)?.name}"`;
  }
  return '';
};

const searchContext = getSearchContext();
---

<Layout title={post.title}>
  <!-- Navigation Bar -->
  <nav>
    <div class="max-w-[2000px] mx-auto lg:mt-5 md:px-5 lg:px-56 pb-2">
      <div class="flex items-center justify-between text-[17px] mt-8 md:mb-[-50px]">
        <!-- Categories - Desktop View -->
        <div class="hidden md:flex items-center gap-6">
          <a 
            href="/blog" 
            class={` hover:text-[#485DAB] transition-colors ${!currentCategory ? 'text-[#485DAB] font-medium' : ''}`}
          >
            All Posts
          </a>
          
          {mainCategories.map((category) => (
            <a
              href={`/blog?category=${category.slug}${searchQuery ? `&search=${searchQuery}` : ''}`}
              class={` hover:text-[#485DAB] transition-colors ${
                currentCategory === category.slug ? 'text-[#485DAB] font-medium' : ''
              }`}
            >
              {category.name}
            </a>
          ))}

          {moreCategories.length > 0 && (
            <div class="relative" x-data="{ open: false }" x-cloak>
              <button 
                @click="open = !open" 
                class="flex items-center gap-1 hover:text-[#485DAB] transition-colors"
              >
                more
                <svg 
                  class="w-4 h-4"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                >
                  <polyline points="6 9 12 15 18 9" />
                </svg>
              </button>
              
              <div 
                x-show="open" 
                @click.outside="open = false"
                class="absolute top-full left-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-10"
                x-cloak
              >
                {moreCategories.map((category) => (
                  <a
                    href={`/blog?category=${category.slug}${searchQuery ? `&search=${searchQuery}` : ''}`}
                    class={`block px-4 py-2 hover:bg-gray-50 hover:text-[#485DAB] transition-colors ${
                      currentCategory === category.slug ? 'text-[#485DAB] bg-gray-50' : ''
                    }`}
                  >
                    {category.name}
                  </a>
                ))}
              </div>
            </div>
          )}
        </div>

        <!-- Categories - Mobile View -->
        <div class="flex md:hidden items-center gap-4" x-data="{ mobileMenuOpen: false }">
          <a 
            href="/blog" 
            class={` hover:text-[#485DAB] transition-colors ${!currentCategory ? 'text-[#485DAB] font-medium' : ''}`}
          >
            All Posts
          </a>
          
          <div class="relative">
            <button 
              @click="mobileMenuOpen = !mobileMenuOpen" 
              class="flex items-center gap-1 hover:text-[#485DAB] transition-colors"
            >
              Categories
              <svg 
                class="w-4 h-4"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              >
                <polyline points="6 9 12 15 18 9" />
              </svg>
            </button>
            
            <div 
              x-show="mobileMenuOpen" 
              @click.outside="mobileMenuOpen = false"
              class="absolute top-full left-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-10"
              x-cloak
            >
              {[...mainCategories, ...moreCategories].map((category) => (
                <a
                  href={`/blog?category=${category.slug}${searchQuery ? `&search=${searchQuery}` : ''}`}
                  class={`block px-4 py-2 hover:bg-gray-50 hover:text-[#485DAB] transition-colors ${
                    currentCategory === category.slug ? 'text-[#485DAB] bg-gray-50' : ''
                  }`}
                >
                  {category.name}
                </a>
              ))}
            </div>
          </div>
        </div>

        <!-- Search Form -->
        <div class="flex items-center gap-4">
          <!-- Search Feature -->
          <div class="relative" x-data="search">
            <!-- Search Icon Button -->
            <button
              @click="isSearching = !isSearching"
              class="p-2 hover:text-[#485DAB] transition-colors"
              x-show="!isSearching"
            >
              <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="11" cy="11" r="8" />
                <line x1="21" y1="21" x2="16.65" y2="16.65" />
              </svg>
            </button>
            
            <!-- Search Form  -->
            <form
              x-show="isSearching"
              x-cloak
              x-transition:enter="transition ease-out duration-200"
              x-transition:enter-start="opacity-0 transform scale-95"
              x-transition:enter-end="opacity-100 transform scale-100"
              x-transition:leave="transition ease-in duration-100"
              x-transition:leave-start="opacity-100 transform scale-100"
              x-transition:leave-end="opacity-0 transform scale-95"
              class="absolute right-0 top-[-20px] flex items-center"
              @submit.prevent="handleSearch"
            >
              <div class="relative flex items-center bg-white rounded-lg shadow-lg">
                <input
                  type="text"
                  name="search"
                  placeholder="Search posts..."
                  value={searchQuery}
                  class="w-64 pl-4 pr-16 py-2 rounded-lg border-0 focus:ring-2 focus:ring-[#485DAB]"
                  @keyup.escape="isSearching = false"
                />
                
                <!-- Close Search Button -->
                <button
                  type="button"
                  @click="isSearching = false"
                  class="absolute right-2 p-1.5 hover:text-[#485DAB] transition-colors"
                >
                  <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <line x1="18" y1="6" x2="6" y2="18" />
                    <line x1="6" y1="6" x2="18" y2="18" />
                  </svg>
                </button>
  
                <!-- Clear Search Text Button -->
                {searchQuery && (
                  <button
                    type="button"
                    @click="clearSearch"
                    class="absolute right-10 p-1.5 hover:text-[#485DAB] transition-colors"
                  >
                    <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <circle cx="12" cy="12" r="10" />
                      <path d="M15 9l-6 6M9 9l6 6" />
                    </svg>
                  </button>
                )}
              </div>
            </form>
          </div>
  
          <!-- Login/Sign up Button -->
          <!-- <a
            href="/login"
            class="inline-flex items-center px-4 py-2 border border-purple-600 text-purple-600 rounded-lg hover:bg-purple-600 hover:text-white transition-colors duration-200"
          >
            Log in / Sign up
          </a> -->
        </div>
      </div>
    </div>
  </nav>

  <!-- Main Content -->
  <main class="max-w-[2000px] mx-auto px-4 md:px-8 lg:px-56 py-12">
    <article class="bg-white border border-gray-200 rounded-lg p-3 lg:px-[80px] lg:py-[55px]">
      <!-- Author Info and Actions -->
      <div class="flex items-center justify-between mb-8">
        <div class="flex items-center gap-4">
          {post.author?.profileImage && (
            <img
              src={post.author.profileImage.url}
              alt={post.author.name}
              class="w-12 h-12 rounded-full object-cover"
            />
          )}
          <div class="flex flex-col md:flex-row md:items-center gap-1 md:gap-2 text-sm text-gray-500">
            <span class="font-medium text-gray-900">{post.author?.name}</span>
            <span class="hidden md:inline-block">•</span>
            <time datetime={post.publishedDate}>
              {formatDate(post.publishedDate)}
            </time>
            <span class="hidden md:inline-block">•</span>
            <span>{post.estimatedReadTime} min read</span>
          </div>
        </div>
        
        <div class="relative" x-data="{ open: false }">
          <button @click="open = !open" class="p-2 hover:bg-gray-100 rounded-full">
            <svg class="w-5 h-5 text-gray-500" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="12" cy="5" r="1" />
              <circle cx="12" cy="12" r="1" />
              <circle cx="12" cy="19" r="1" />
            </svg>
          </button>
          <div 
            x-show="open" 
            x-cloak
            @click.outside="open = false"
            class="absolute right-0 mt-1 w-32 bg-white shadow-lg rounded-md z-10"
          >
            <button 
              @click="$dispatch('open-share-modal', { postId: '{post.id}', postTitle: '{post.title}' }); open = false"
              class="w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 flex items-center"
            >
              <svg class="w-4 h-4 mr-2" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="18" cy="5" r="3" />
                <circle cx="6" cy="12" r="3" />
                <circle cx="18" cy="19" r="3" />
                <line x1="8.59" y1="13.51" x2="15.42" y2="17.49" />
                <line x1="15.41" y1="6.51" x2="8.59" y2="10.49" />
              </svg>
              Share
            </button>
          </div>
        </div>
      </div>

      <!-- Title -->
      <h1 class="text-3xl md:text-5xl font-semibold text-gray-900 mb-8">{post.title}</h1>

      <!-- Dynamic Content -->
      <div class="prose max-w-none" x-data="imageViewer">
        <!-- click handler to all images in the content -->
        <Fragment set:html={contentHtml} />

        <!-- Image Viewer Modal -->
        <div 
          x-show="viewerOpen" 
          x-cloak
          class="fixed inset-0 z-50 bg-black bg-opacity-90 flex items-center justify-center"
          @click.self="viewerOpen = false"
          @keydown.escape.window="viewerOpen = false"
        >
          <button 
            @click="viewerOpen = false" 
            class="absolute top-4 right-4 text-white hover:text-gray-300"
          >
            <svg class="w-8 h-8" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <line x1="18" y1="6" x2="6" y2="18" />
              <line x1="6" y1="6" x2="18" y2="18" />
            </svg>
          </button>
          <img 
            :src="currentImage" 
            class="max-h-[90vh] max-w-[90vw] object-contain" 
            alt="Enlarged view" 
          />
        </div>
      </div>
      
      <!-- Post Footer -->
      <div class="mt-12 pt-8 border-t border-gray-200">
        <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center">
          <!-- Social Media Links -->
          <div class="flex items-center gap-4 mb-4 sm:mb-0" x-data="socialSharing">
            <button 
              @click="shareToFacebook('{post.id}', '{post.title}')"
              class="text-gray-600 hover:text-[#3b5998]"
              aria-label="Share on Facebook"
            >
              <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                <path d="M18.77,7.46H14.54v-1.9c0-1.03,0.68-1.27,1.16-1.27c0.48,0,2.94,0,2.94,0V0.13H14.53c-3.28,0-4.03,2.47-4.03,4.05v3.28H8.31v4.14h2.19c0,5.32,0,11.77,0,11.77h4.04c0,0,0-6.5,0-11.77h2.72L18.77,7.46z"/>
              </svg>
            </button>
            
            <button 
              @click="shareToTwitter('{post.id}', '{post.title}')"
              class="text-gray-600 hover:text-[#1DA1F2]"
              aria-label="Share on Twitter"
            >
              <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723 10.1 10.1 0 01-3.127 1.184 4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.937 4.937 0 004.604 3.417 9.868 9.868 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63a9.936 9.936 0 002.46-2.548l-.047-.02z"/>
              </svg>
            </button>
            
            <button 
              @click="shareToLinkedIn('{post.id}', '{post.title}')"
              class="text-gray-600 hover:text-[#0e76a8]"
              aria-label="Share on LinkedIn"
            >
              <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
                <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
              </svg>
            </button>
            
            <button 
              @click="copyLink('{post.id}')"
              class="text-gray-600 hover:text-gray-900 relative group"
              aria-label="Copy link"
            >
              <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
                <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
              </svg>
              <span 
                x-show="copySuccess" 
                x-cloak
                x-transition 
                class="absolute -bottom-8 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white text-xs px-2 py-1 rounded whitespace-nowrap"
              >
                Copied!
              </span>
            </button>
          </div>
          
          <!-- Post Categories -->
          <div class="flex flex-wrap items-center gap-2">
            {post.categories?.map((category) => (
              <a 
                href={`/blog?category=${category.slug}`}
                class="px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full hover:bg-[#485DAB] hover:text-white transition-colors"
              >
                {category.name}
              </a>
            ))}
          </div>
        </div>
      </div>
    </article>

    <!-- Related Posts Section -->
    {relatedPosts.length > 0 && (
      <div class="mt-16">
        {searchContext && (
          <div class="mb-8 text-gray-600">
            {searchContext}
          </div>
        )}
        
        <h2 class="text-2xl font-semibold mb-8">Related Posts</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedPosts.map((relatedPost) => (
            <a 
              href={`/blog/${relatedPost.id}`}
              class="block group"
            >
              <article class="bg-white rounded-xl overflow-hidden shadow-sm group-hover:shadow-lg transition-shadow duration-300">
                <div class="aspect-video overflow-hidden">
                  <img 
                    src={relatedPost.featuredImage.url} 
                    alt={relatedPost.featuredImage.alt}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                </div>
                <div class="p-6">
                  <h3 class="font-bold text-gray-900 mb-2 group-hover:text-[#485DAB] transition-colors">
                    {relatedPost.title}
                  </h3>
                  <div class="flex items-center text-sm text-gray-500">
                    <time datetime={relatedPost.publishedDate}>
                      {formatDate(relatedPost.publishedDate)}
                    </time>
                    <span class="mx-2">•</span>
                    <span>{relatedPost.estimatedReadTime} min read</span>
                  </div>
                </div>
              </article>
            </a>
          ))}
        </div>
      </div>
    )}
  </main>
  
  <!-- Share Modal -->
  <div 
    x-data="shareModal" 
    x-show="isOpen" 
    x-cloak
    @open-share-modal.window="openModal($event.detail)"
    x-transition:enter="transition ease-out duration-300"
    x-transition:enter-start="opacity-0"
    x-transition:enter-end="opacity-100"
    x-transition:leave="transition ease-in duration-200"
    x-transition:leave-start="opacity-100"
    x-transition:leave-end="opacity-0"
    class="fixed inset-0 z-50 flex items-center justify-center px-4 bg-black bg-opacity-50"
    @keydown.escape.window="isOpen = false"
  >
    <div 
      x-show="isOpen"
      x-transition:enter="transition ease-out duration-300"
      x-transition:enter-start="opacity-0 transform scale-95"
      x-transition:enter-end="opacity-100 transform scale-100"
      x-transition:leave="transition ease-in duration-200"
      x-transition:leave-start="opacity-100 transform scale-100"
      x-transition:leave-end="opacity-0 transform scale-95"
      @click.outside="isOpen = false"
      class="relative bg-white rounded-lg shadow-xl max-w-md w-full p-6"
    >
      <div class="text-center mb-6">
        <h3 class="text-xl font-semibold text-gray-900">Share Post</h3>
      </div>
      
      <div class="flex justify-center space-x-4">
        <!-- Facebook Share Button -->
        <button 
          @click="shareToFacebook()"
          class="w-12 h-12 rounded-full bg-[#3b5998] text-white flex items-center justify-center hover:bg-opacity-90 transition-colors"
          aria-label="Share on Facebook"
        >
          <svg class="w-6 h-6" viewBox="0 0 24 24" fill="currentColor">
            <path d="M18.77,7.46H14.54v-1.9c0-1.03,0.68-1.27,1.16-1.27c0.48,0,2.94,0,2.94,0V0.13H14.53c-3.28,0-4.03,2.47-4.03,4.05v3.28H8.31v4.14h2.19c0,5.32,0,11.77,0,11.77h4.04c0,0,0-6.5,0-11.77h2.72L18.77,7.46z"/>
          </svg>
        </button>
        
        <!-- Twitter/X Share Button -->
        <button 
          @click="shareToTwitter()"
          class="w-12 h-12 rounded-full bg-[#1DA1F2] text-white flex items-center justify-center hover:bg-opacity-90 transition-colors"
          aria-label="Share on X/Twitter"
        >
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
            <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723 10.1 10.1 0 01-3.127 1.184 4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.937 4.937 0 004.604 3.417 9.868 9.868 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63a9.936 9.936 0 002.46-2.548l-.047-.02z"/>
          </svg>
        </button>
        
        <!-- LinkedIn Share Button -->
        <button 
          @click="shareToLinkedIn()"
          class="w-12 h-12 rounded-full bg-[#0e76a8] text-white flex items-center justify-center hover:bg-opacity-90 transition-colors"
          aria-label="Share on LinkedIn"
        >
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
        </button>
        
        <!-- Copy Link Button -->
        <button 
          @click="copyLink()"
          class="w-12 h-12 rounded-full bg-gray-700 text-white flex items-center justify-center hover:bg-gray-800 transition-colors"
          aria-label="Copy link"
        >
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
            <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
          </svg>
        </button>
      </div>
      
      <!-- Copy feedback message -->
      <div x-show="copySuccess" x-cloak class="mt-4 text-center text-sm text-green-600">Link copied to clipboard!</div>
    </div>
  </div>
</Layout>

<script>
  interface AlpineEvent extends Event {
    target: HTMLElement;
  }

  interface AlpineInstance {
    data: (name: string, callback: () => any) => void;
  }

  declare global {
    interface Window {
      Alpine: AlpineInstance;
    }
  }

  // Get the actual post ID from the URL
  const getCurrentPostId = () => {
    const path = window.location.pathname;
    return path.split('/').pop();
  };

  document.addEventListener('alpine:init', () => {
    // Search functionality
    window.Alpine.data('search', () => ({
      isSearching: false,
      
      handleSearch(event: Event) {
        event.preventDefault();
        
        const form = (event.target as HTMLElement).closest('form');
        if (!form) return;
        
        const searchInput = form.querySelector('input[name="search"]') as HTMLInputElement | null;
        if (!searchInput) return;
        
        const searchValue = searchInput.value.trim();
        
        const currentParams = new URLSearchParams(window.location.search);
        if (searchValue) {
          currentParams.set('search', searchValue);
        } else {
          currentParams.delete('search');
        }
        
        // Preserve the category parameter if it exists
        window.location.href = `/blog${currentParams.toString() ? `?${currentParams.toString()}` : ''}`;
      },
      
      clearSearch() {
        const searchInput = document.querySelector('input[name="search"]') as HTMLInputElement | null;
        if (searchInput) {
          searchInput.value = '';
          this.handleSearch(new Event('submit'));
        }
      }
    }));
    
    // Image viewer 
    window.Alpine.data('imageViewer', () => ({
  viewerOpen: false,
  currentImage: '',
  
  init() {
    setTimeout(() => {
      const contentImages = document.querySelectorAll('.prose img');
      contentImages.forEach(img => {
        img.addEventListener('click', (e) => {
          const target = e.target as HTMLImageElement;
          this.currentImage = target.src;
          this.viewerOpen = true;
        });
        img.style.cursor = 'pointer';
      });
    }, 100);
  }
  }));
    
    window.Alpine.data('socialSharing', () => ({
      copySuccess: false,
      
      shareToFacebook() {
        const postId = getCurrentPostId();
        const postTitle = document.querySelector('h1')?.textContent || '';
        const url = `${window.location.origin}/blog/${postId}`;
        window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`, '_blank');
      },
      
      shareToTwitter() {
        const postId = getCurrentPostId();
        const postTitle = document.querySelector('h1')?.textContent || '';
        const url = `${window.location.origin}/blog/${postId}`;
        window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(postTitle)}&url=${encodeURIComponent(url)}`, '_blank');
      },
      
      shareToLinkedIn() {
        const postId = getCurrentPostId();
        const url = `${window.location.origin}/blog/${postId}`;
        window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`, '_blank');
      },
      
      copyLink() {
      const postId = this.postId || getCurrentPostId();
      const url = `${window.location.origin}/blog/${postId}`;
      navigator.clipboard.writeText(url).then(() => {
        this.copySuccess = true;
        setTimeout(() => {
          this.copySuccess = false;
        }, 2000);
      });
    }
    }));
 
    // Share modal functionality
    window.Alpine.data('shareModal', () => ({
      isOpen: false,
      postId: null,
      postTitle: '',
      copySuccess: false,
      
      openModal(detail) {
        this.isOpen = true;
        this.postId = detail.postId || getCurrentPostId();
        this.postTitle = detail.postTitle || document.querySelector('h1')?.textContent || '';
        this.copySuccess = false;
      },
      
      shareToFacebook() {
        const url = `${window.location.origin}/blog/${this.postId || getCurrentPostId()}`;
        window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`, '_blank');
      },
      
      shareToTwitter() {
        const url = `${window.location.origin}/blog/${this.postId || getCurrentPostId()}`;
        const text = this.postTitle || document.querySelector('h1')?.textContent || '';
        window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(text)}&url=${encodeURIComponent(url)}`, '_blank');
      },
      
      shareToLinkedIn() {
        const url = `${window.location.origin}/blog/${this.postId || getCurrentPostId()}`;
        window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`, '_blank');
      },
      
      copyLink() {
        const url = `${window.location.origin}/blog/${this.postId || getCurrentPostId()}`;
        navigator.clipboard.writeText(url).then(() => {
          this.copySuccess = true;
          setTimeout(() => {
            this.copySuccess = false;
          }, 2000);
        });
      }
    }));
  });
</script>

<style>
  [x-cloak] { 
    display: none !important; 
  }
  
  /* Highlighted search terms */
  mark.bg-yellow-200 {
    padding: 0.1em 0;
    background-color: #fef08a;
    border-radius: 0.2em;
  }
  
  /* Image viewer styling */
  .prose img {
    cursor: pointer;
    transition: transform 0.2s ease-in-out;
  }
  
  .prose img:hover {
    transform: scale(1.02);
  }
  
  /* Image viewer modal styling */
  .modal-image-viewer {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.9);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 50;
  }
  
  .modal-image-viewer img {
    max-height: 90vh;
    max-width: 90vw;
    object-fit: contain;
  }
  
  .modal-close-button {
    position: absolute;
    top: 1rem;
    right: 1rem;
    color: white;
    background: transparent;
    border: none;
    cursor: pointer;
    font-size: 2rem;
  }
</style>