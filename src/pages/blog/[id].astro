---
import { Icon } from '@iconify/react';
import Layout from '../../layouts/Layout.astro';
import { MoreVertical, Share2 } from 'lucide-react';
import { 
  PAYLOAD_URL, 
  transformPost, 
  formatDate, 
  fetchCategories,
  renderContentNode 
} from '../../utils/blog';
import type { Post, ApiResponse } from '../../types/payload';

export async function getStaticPaths() {
  try {
    const response = await fetch(`${PAYLOAD_URL}/api/posts?where[status][equals]=published`);
    if (!response.ok) throw new Error('Failed to fetch posts');
    const data: ApiResponse = await response.json();
    
    return data.docs.map((post: Post) => ({
      params: { id: post.id },
      props: { post: transformPost(post) }
    }));
  } catch (error) {
    console.error('Error in getStaticPaths:', error);
    throw error;
  }
}

// Get current URL parameters and fetch data
const { post } = Astro.props;
const categories = await fetchCategories();

const mainCategories = categories.slice(0, 3);
const moreCategories = categories.slice(3);
const searchParams = new URL(Astro.request.url).searchParams;
const searchQuery = searchParams.get('search') || '';

const contentHtml = post.content.root.children
  .map(node => renderContentNode(node))
  .join('');
---

<Layout title={post.title}>
  <!-- Navigation Bar -->
  <nav class=" pt-[25px]">
    <div class="max-w-[2000px] mx-auto lg:mt-20 md:px-8 lg:px-52 py-4">
      <div class="flex items-center justify-between">
        <!-- Categories -->
        <div class="flex items-center gap-6">
          <a 
            href="/blog" 
            class="text-gray-600 hover:text-cyan-600 transition-colors"
          >
            All Posts
          </a>
          
          {mainCategories.map((category) => (
            <a
              href={`/blog?category=${category.slug}`}
              class="text-gray-600 hover:text-cyan-600 transition-colors"
            >
              {category.name}
            </a>
          ))}

          {moreCategories.length > 0 && (
            <div class="relative group">
              <button class="flex items-center gap-1 text-gray-600 hover:text-cyan-600 transition-colors">
                More
                <svg 
                  class="w-4 h-4"
                  viewBox="0 0 24 24"
                  fill="none"
                  stroke="currentColor"
                  stroke-width="2"
                >
                  <polyline points="6 9 12 15 18 9" />
                </svg>
              </button>
              
              <div class="hidden group-hover:block absolute top-full left-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-10">
                {moreCategories.map((category) => (
                  <a
                    href={`/blog?category=${category.slug}`}
                    class="block px-4 py-2 text-gray-600 hover:bg-gray-50 hover:text-cyan-600 transition-colors"
                  >
                    {category.name}
                  </a>
                ))}
              </div>
            </div>
          )}
        </div>

        <!-- Search and Login -->
        <div class="flex items-center gap-6">
          <div class="relative" x-data="{ isSearching: false }">
            <button
              @click="isSearching = !isSearching"
              class="p-2 text-gray-600 hover:text-cyan-600 transition-colors"
              :class="{ 'hidden': isSearching }"
            >
              <svg class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <circle cx="11" cy="11" r="8" />
                <line x1="21" y1="21" x2="16.65" y2="16.65" />
              </svg>
            </button>
            
            <form
              x-show="isSearching"
              class="absolute right-0 top-0 w-64 flex items-center bg-white rounded-lg shadow-sm"
              @submit.prevent="handleSearch"
            >
              <input
                type="text"
                name="search"
                placeholder="Search posts..."
                value={searchQuery}
                class="w-full px-4 py-2 rounded-l-lg border-0 focus:ring-2 focus:ring-cyan-500"
              />
              <button
                type="button"
                @click="isSearching = false"
                class="p-2 text-gray-600 hover:text-cyan-600 transition-colors"
              >
                <svg class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <line x1="18" y1="6" x2="6" y2="18" />
                  <line x1="6" y1="6" x2="18" y2="18" />
                </svg>
              </button>
            </form>
          </div>
          
          <div 
            class="border border-gray-300 p-2 text-blue-600 hover:text-blue-700 transition-colors"
          >
            <a href="/login" >Log in </a>/ <a href="/signup">Sign up</a>
          </div>
        </div>
      </div>
    </div>
  </nav>

  <!-- Main Content -->
  <main class="max-w-[2000px] mx-auto px-4 md:px-8 lg:px-52 py-12">
    <article class="bg-white border border-gray-200 rounded-lg p-3 lg:p-[80px]">
      <!-- Author Info and Actions -->
      <div class="flex items-center justify-between mb-8">
        <div class="flex items-center gap-4">
          {post.author?.profileImage && (
            <img
              src={post.author.profileImage.url}
              alt={post.author.name}
              class="w-12 h-12 rounded-full object-cover"
            />
          )}
          <div class="flex items-center gap-2 text-sm text-gray-500">
            <span class="font-medium text-gray-900">{post.author?.name}</span>
            <span>•</span>
            <time datetime={post.publishedDate}>
              {formatDate(post.publishedDate)}
            </time>
            <span>•</span>
            <span>{post.estimatedReadTime} min read</span>
          </div>
        </div>
        
        <div class="relative group">
          <button class="p-2 hover:bg-gray-100 rounded-full">
            <MoreVertical className="w-5 h-5 text-gray-500" />
          </button>
          <div class="absolute left-0 mt-1 w-32 bg-white shadow-lg rounded-md hidden group-hover:block z-10">
            <button class="w-full px-4 py-1 text-right text-gray-700 hover:bg-gray-100 flex items-center">
              <Share2 className="w-4 h-4 mr-2" />
              Share
            </button>
          </div>
        </div>
      </div>

      <!-- Title -->
      <h1 class="text-5xl font-semibold text-gray-900 px-5 mb-8">{post.title}</h1>

      <!-- Dynamic Content -->
      <div class="prose max-w-none">
        <Fragment set:html={contentHtml} />
      </div>
    </article>
  </main>
</Layout>