---
import Layout from '../../layouts/Layout.astro';
import type { ApiResponse, Post, Category, CategoryResponse } from '../../types/payload';
import { MoreVertical, Share2 } from 'lucide-react';
import { 
  PAYLOAD_URL 
} from '../../utils/blog';

function highlightText(text: string, searchQuery: string): string {
  if (!searchQuery) return text;
  const regex = new RegExp(`(${searchQuery})`, 'gi');
  return text.replace(regex, '<mark class="bg-yellow-200">$1</mark>');
}

async function fetchCategories(): Promise<Category[]> {
  try {
    const response = await fetch(`${PAYLOAD_URL}/api/categories`);
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    const data: CategoryResponse = await response.json();
    return data.docs;
  } catch (error) {
    console.error('Error fetching categories:', error);
    return [];
  }
}

async function fetchPosts(category?: string, search?: string): Promise<Post[]> {
  try {
    const allPosts: Post[] = [];
    let currentPage = 1;
    let hasNextPage = true;
    
    // Keep fetching until we have all pages
    while (hasNextPage) {
      const params = new URLSearchParams();
      params.append('depth', '2'); 
      
      // We'll use a larger limit to reduce the number of requests
      const limit = 100;
      params.append('limit', limit.toString());
      params.append('page', currentPage.toString());
      
      if (category) {
        params.append('where[category.slug][equals]', category);
      }
      
      if (search) {
        const searchString = search.trim();
        params.append('where[or][0][title][contains]', searchString);
        params.append('where[or][1][content][contains]', searchString);
        params.append('where[or][2][category.name][contains]', searchString);
        params.append('where[or][3][author.name][contains]', searchString);
      }
      
      const PAYLOAD_URL = import.meta.env.PUBLIC_PAYLOAD_URL;
      const response = await fetch(`${PAYLOAD_URL}/api/posts?${params.toString()}`);

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      
      const data: ApiResponse = await response.json();
      
      const processedPosts = data.docs
        .filter(post => post.status === 'published')
        .map(post => ({
          ...post,
          featuredImage: {
            ...post.featuredImage,
            url: `${PAYLOAD_URL}${post.featuredImage.url}`,
          },
          author: {
            ...post.author,
            profileImage: post.author.profileImage ? {
              ...post.author.profileImage,
              url: `${PAYLOAD_URL}${post.author.profileImage.url}`,
            } : undefined,
          },
        }));
      
      allPosts.push(...processedPosts);
      
      // Check if there are more pages to fetch
      hasNextPage = data.hasNextPage;
      currentPage++;
    }
    
    // Sort all posts by published date
    return allPosts.sort((a, b) => new Date(b.publishedDate).getTime() - new Date(a.publishedDate).getTime());
  } catch (error) {
    console.error('Error fetching posts:', error);
    return [];
  }
}
function formatDate(dateString: string): string {
  return new Date(dateString).toLocaleDateString('en-US', {
    month: 'short',
    day: 'numeric',
    year: 'numeric'
  });
}

// Get current URL parameters
const searchParams = new URL(Astro.request.url).searchParams;
const searchQuery = searchParams.get('search') || '';
const currentCategory = searchParams.get('category') || '';

// Fetch all categories
const categories = await fetchCategories();
const initialPosts = await fetchPosts(currentCategory, searchQuery);

// Create search context message
const getSearchContext = () => {
  if (searchQuery && currentCategory) {
    return `${initialPosts.length} results for "${searchQuery}" in "${categories.find(c => c.slug === currentCategory)?.name}"`;
  } else if (searchQuery) {
    return `${initialPosts.length} results for "${searchQuery}"`;
  } else if (currentCategory) {
    return `${initialPosts.length} posts in "${categories.find(c => c.slug === currentCategory)?.name}"`;
  }
  return '';
};

const searchContext = getSearchContext();
---

<Layout title="Amplio Blog">
  <main class="max-w-[2000px] mx-auto lg:mt-5 px-4 md:px-8 lg:px-56 pb-6" id="main-content">
    <h1 class="text-5xl font-arial font-semibold mt-3 text-center mb-12">Amplio Blog</h1>
    
    <div class="relative flex flex-wrap items-center justify-between gap-4 mb-6">
      <div class="flex-1 flex flex-wrap items-center gap-8">
        <a
          href="/blog"
          class={`font-arial text-[14px] hover:text-[#485DAB] transition-colors ${!currentCategory ? 'text-[#485DAB] font-medium' : ''}`}
        >
          All Posts
        </a>

        {categories.slice(0, 7).map((category) => (
          <a
            href={`/blog?category=${category.slug}${searchQuery ? `&search=${searchQuery}` : ''}`}
            class={`ont-arial text-[14px] hover:text-[#485DAB] transition-colors hidden md:inline-block ${
              currentCategory === category.slug ? 'text-[#485DAB] font-medium' : ''
            }`}
          >
            {category.name}
          </a>
        ))}
        
        <div x-data="{ open: false }" class="relative">
          <button 
            @click="open = !open" 
            @click.outside="open = false"
            class="flex items-center gap-1 hover:text-[#485DAB] transition-colors"
          >
            more
            <svg 
              class="w-4 h-4"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <polyline points="6 9 12 15 18 9" />
            </svg>
          </button>
          
          <div 
            x-show="open" 
            x-transition:enter="transition ease-out duration-200"
            x-transition:enter-start="opacity-0 transform scale-95"
            x-transition:enter-end="opacity-100 transform scale-100"
            x-transition:leave="transition ease-in duration-100"
            x-transition:leave-start="opacity-100 transform scale-100"
            x-transition:leave-end="opacity-0 transform scale-95"
            class="absolute top-full left-0 mt-2 w-48 bg-white rounded-lg shadow-lg py-2 z-10"
          >
            {/* For mobile: Show all categories except All Posts in more dropdown */}
            <div class="md:hidden">
              {categories.map((category) => (
                <a
                  href={`/blog?category=${category.slug}${searchQuery ? `&search=${searchQuery}` : ''}`}
                  class={`block px-4 py-2 hover:bg-gray-50 hover:text-[#485DAB] transition-colors ${
                    currentCategory === category.slug ? 'text-[#485DAB] bg-gray-50' : ''
                  }`}
                >
                  {category.name}
                </a>
              ))}
            </div>
            
            {/* For desktop: Show only remaining categories */}
            <div class="hidden md:block">
              {categories.slice(7).map((category) => (
                <a
                  href={`/blog?category=${category.slug}${searchQuery ? `&search=${searchQuery}` : ''}`}
                  class={`block px-4 py-2 hover:bg-gray-50 hover:text-[#485DAB] transition-colors ${
                    currentCategory === category.slug ? 'text-[#485DAB] bg-gray-50' : ''
                  }`}
                >
                  {category.name}
                </a>
              ))}
            </div>
          </div>
        </div>
      </div>
      
      <!-- Search  -->
      <div class="flex items-center gap-4">
        <div class="relative" x-data="search">
          <button
            @click="isSearching = !isSearching"
            class="p-2 hover:text-[#485DAB] transition-colors"
            x-show="!isSearching"
          >
            <svg class="w-4 h-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="11" cy="11" r="8" />
              <line x1="21" y1="21" x2="16.65" y2="16.65" />
            </svg>
          </button>
          
          <!-- Search Form  -->
          <form
            x-show="isSearching"
            x-transition:enter="transition ease-out duration-200"
            x-transition:enter-start="opacity-0 transform scale-95"
            x-transition:enter-end="opacity-100 transform scale-100"
            x-transition:leave="transition ease-in duration-100"
            x-transition:leave-start="opacity-100 transform scale-100"
            x-transition:leave-end="opacity-0 transform scale-95"
            class="absolute right-0 top-[-20px] flex items-center"
            @submit.prevent="handleSearch"
          >
            <div class="relative flex items-center bg-white rounded-lg shadow-lg">
              <input
                type="text"
                name="search"
                placeholder="Search posts..."
                value={searchQuery}
                class="w-64 pl-4 pr-16 py-2 rounded-lg border-0 focus:ring-2 focus:ring-[#485DAB]"
                @keyup.escape="isSearching = false"
              />
              
              <!-- Close Search Button -->
              <button
                type="button"
                @click="isSearching = false"
                class="absolute right-2 p-1.5 text-white hover:text-[#485DAB] transition-colors"
              >
                <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                  <line x1="18" y1="6" x2="6" y2="18" />
                  <line x1="6" y1="6" x2="18" y2="18" />
                </svg>
              </button>

              <!-- Clear Search Text Button -->
              {searchQuery && (
                <button
                  type="button"
                  @click="clearSearch"
                  class="absolute right-10 p-1.5 text-white hover:text-[#485DAB] transition-colors"
                >
                  <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <circle cx="12" cy="12" r="10" />
                    <path d="M15 9l-6 6M9 9l6 6" />
                  </svg>
                </button>
              )}
            </div>
          </form>
        </div>
      </div>
    </div>
    
    {(() => {
      // Case 1: No posts found for search or category
      if ((searchQuery || currentCategory) && initialPosts.length === 0) {
        return (
          <div class="text-center py-16">
            <div class="mb-4">
              <svg 
                class="w-16 h-16 mx-auto text-gray-400"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
              >
                <circle cx="11" cy="11" r="8" />
                <line x1="21" y1="21" x2="16.65" y2="16.65" />
              </svg>
            </div>
            <h2 class="text-2xl font-semibold text-gray-900 mb-2">No posts found</h2>
            <p class="text-gray-600 mb-6">
              {searchQuery 
                ? `We couldn't find any posts matching "${searchQuery}"${currentCategory ? ` in the selected category` : ''}.`
                : "We couldn't find any posts in this category."}
            </p>
            <a 
              href="/blog" 
              class="inline-flex items-center justify-center px-6 py-3 rounded-md text-white bg-[#485DAB] hover:bg-[#344eaa] transition-colors"
            >
              View all posts
            </a>
          </div>
        );
      }

      // Case 2: Search or category results found
      if (searchQuery || currentCategory) {
        return (
          <>
            {searchContext && (
              <div class="mb-8 text-xl font-semibold text-gray-900">
                {searchContext}
              </div>
            )}
            
            <div class="space-y-8" id="posts-container">
              {initialPosts.map((post, index) => (
                <article class="flex flex-col md:flex-row gap-8 p-6 bg-white border border-gray-200 shadow-lg hover:shadow-xl transition-shadow post-item">
                  <div class="md:w-1/3">
                    <a href={`/blog/${post.id}`} class="block">
                      <img 
                        src={post.featuredImage.url} 
                        alt={post.featuredImage.alt}
                        class="w-full h-52 object-fill"
                      />
                    </a>
                  </div>
                  
                  <div class="md:w-2/3 space-y-4">
                    <div class="flex justify-between items-center">
                      <div class="flex items-center gap-4">
                        <div class="w-10 h-10 rounded-full overflow-hidden border-2 border-gray-100">
                          {post.author.profileImage && (
                            <img 
                              src={post.author.profileImage.url} 
                              alt={`${post.author.name}'s profile`}
                              class="w-full h-full object-cover"
                            />
                          )}
                        </div>
                        <div>
                          <p class="font-medium text-gray-900">{post.author.name}</p>
                          <div class="flex items-center text-sm text-gray-500">
                            <time datetime={post.publishedDate}>
                              {formatDate(post.publishedDate)}
                            </time>
                            <span class="mx-2">•</span>
                            <span>{post.estimatedReadTime} min read</span>
                          </div>
                        </div>
                      </div>

                      <div x-data={`{ open: false, postId: '${post.id}' }`} class="relative">
                        <button 
                          @click="open = !open" 
                          @click.outside="open = false"
                          class="p-2 hover:bg-gray-100 rounded-full"
                        >
                          <MoreVertical className="w-5 h-5 text-gray-500" />
                        </button>
                        <div 
                          x-show="open" 
                          x-transition:enter="transition ease-out duration-200"
                          x-transition:enter-start="opacity-0 transform scale-95"
                          x-transition:enter-end="opacity-100 transform scale-100"
                          x-transition:leave="transition ease-in duration-100"
                          x-transition:leave-start="opacity-100 transform scale-100"
                          x-transition:leave-end="opacity-0 transform scale-95"
                          class="absolute right-0 mt-1 w-32 bg-white shadow-lg rounded-md z-10"
                        >
                          <button 
                            @click="$dispatch('open-share-modal', { postId: postId, postTitle: 'Check out this post from Amplio Blog' })"
                            class="w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 flex items-center"
                          >
                            <Share2 className="w-4 h-4 mr-2" />
                            Share
                          </button>
                        </div>
                      </div>
                    </div>
                    
                    <div>
                      <a 
                        href={`/blog/${post.id}`}
                        class="block group"
                      >
                        <h2 
                          class="text-xl text-gray-900 group-hover:text-[#485DAB] transition-colors mb-2"
                          set:html={highlightText(post.title, searchQuery)}
                        />
                        <p 
                          class="text-gray-600 line-clamp-2"
                          set:html={highlightText(
                            post.content.root.children.find(child => child.children?.[0]?.text)?.children[0]?.text || '',
                            searchQuery
                          )}
                        />
                      </a>
                    </div>
                    
                    <div class="flex items-center gap-3">
                      <a
                        href={`/blog?category=${post.category.slug}`}
                        class="text-sm px-3 py-1 rounded-full bg-gray-100 text-gray-600 hover:bg-gray-200 transition-colors"
                      >
                        {post.category.name}
                      </a>
                    </div>
                  </div>
                </article>
              ))}
            </div>
            
            <!-- Loading indicator -->
            <div id="loading-indicator" class="hidden text-center py-8">
              <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-[#485DAB]"></div>
              <p class="mt-2 text-gray-600">Loading more posts...</p>
            </div>
          </>
        );
      }

      // Case 3: Default view (all posts)
      return (
        <>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="posts-grid">
            {initialPosts.map((post) => (
              <article class="bg-white border border-gray-200 shadow hover:shadow-md transition-shadow duration-300 post-item">
                <a href={`/blog/${post.id}`} class="block">
                  <img 
                    src={post.featuredImage.url} 
                    alt={post.featuredImage.alt}
                    class="w-full h-72 object-fill"
                  />
                </a>
                <div class="p-6 mt-3 mb-3">
                  <div class="flex items-center justify-between mb-3">
                    <div class="flex items-center gap-2">
                      <div class="w-8 h-8 rounded-full overflow-hidden">
                        {post.author.profileImage && (
                          <img 
                            src={post.author.profileImage.url} 
                            alt={`${post.author.name}'s profile`}
                            class="w-full h-full object-cover"
                          />
                        )}
                      </div>
                      <div>
                        <div class="text-sm font-medium text-gray-900">{post.author.name}</div>
                        <div class="flex items-center text-xs text-gray-500">
                          <time datetime={post.publishedDate}>
                            {formatDate(post.publishedDate)}
                          </time>
                          <span class="mx-1">•</span>
                          <span>{post.estimatedReadTime} min read</span>
                        </div>
                      </div>
                    </div>

                    <div x-data={`{ open: false, postId: '${post.id}' }`} class="relative">
                      <button 
                        @click="open = !open" 
                        @click.outside="open = false"
                        class="p-1 hover:bg-gray-100 rounded-full"
                      >
                        <MoreVertical className="w-5 h-5 text-gray-500" />
                      </button>
                      <div 
                        x-show="open" 
                        x-transition:enter="transition ease-out duration-200"
                        x-transition:enter-start="opacity-0 transform scale-95"
                        x-transition:enter-end="opacity-100 transform scale-100"
                        x-transition:leave="transition ease-in duration-100"
                        x-transition:leave-start="opacity-100 transform scale-100"
                        x-transition:leave-end="opacity-0 transform scale-95"
                        class="absolute right-0 mt-1 w-32 bg-white shadow-lg rounded-md z-10"
                      >
                        <button 
                          @click="$dispatch('open-share-modal', { postId: postId, postTitle: 'Check out this post from Amplio Blog' })"
                          class="w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 flex items-center"
                        >
                          <Share2 className="w-4 h-4 mr-2" />
                          Share
                        </button>
                      </div>
                    </div>
                  </div>

                  <h3 class="font-semibold pl-3 text-gray-900 hover:text-[#485DAB] transition-colors">
                   <a href={`/blog/${post.id}`} class="block"> {post.title}</a>
                  </h3>
                </div>
              </article>
            ))}
          </div>
          
          <!-- Loading indicator -->
          <div id="loading-indicator" class="hidden text-center py-8">
            <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-[#485DAB]"></div>
            <p class="mt-2 text-gray-600">Loading more posts...</p>
          </div>
        </>
      );
    })()}
  </main>

  <!-- Share Modal Component -->
  <div 
  x-data="shareModal" 
  x-show="isOpen" 
  x-cloak
  @open-share-modal.window="openModal($event.detail)"
  x-transition:enter="transition ease-out duration-300"
  x-transition:enter-start="opacity-0"
  x-transition:enter-end="opacity-100"
  x-transition:leave="transition ease-in duration-200"
  x-transition:leave-start="opacity-100"
  x-transition:leave-end="opacity-0"
    class="fixed inset-0 z-50 flex items-center justify-center px-4 bg-black bg-opacity-50"
    @keydown.escape.window="isOpen = false"
  >
    <div 
      x-show="isOpen"
      x-transition:enter="transition ease-out duration-300"
      x-transition:enter-start="opacity-0 transform scale-95"
      x-transition:enter-end="opacity-100 transform scale-100"
      x-transition:leave="transition ease-in duration-200"
      x-transition:leave-start="opacity-100 transform scale-100"
      x-transition:leave-end="opacity-0 transform scale-95"
      @click.outside="isOpen = false"
      class="relative bg-white rounded-lg shadow-xl max-w-md w-full p-6"
    >
      <div class="text-center mb-6">
        <h3 class="text-xl font-semibold text-gray-900">Share Post</h3>
      </div>
      
      <div class="flex justify-center space-x-4">
        <!-- Facebook Share Button -->
        <button 
          @click="shareToFacebook()"
          class="w-12 h-12 rounded-full bg-[#3b5998] text-white flex items-center justify-center hover:bg-opacity-90 transition-colors"
          aria-label="Share on Facebook"
        >
          <svg class="w-6 h-6" viewBox="0 0 24 24" fill="currentColor">
            <path d="M18.77,7.46H14.54v-1.9c0-1.03,0.68-1.27,1.16-1.27c0.48,0,2.94,0,2.94,0V0.13H14.53c-3.28,0-4.03,2.47-4.03,4.05v3.28H8.31v4.14h2.19c0,5.32,0,11.77,0,11.77h4.04c0,0,0-6.5,0-11.77h2.72L18.77,7.46z"/>
          </svg>
        </button>
        
        <!-- Twitter/X Share Button -->
        <button 
          @click="shareToTwitter()"
          class="w-12 h-12 rounded-full bg-[#1DA1F2] text-white flex items-center justify-center hover:bg-opacity-90 transition-colors"
          aria-label="Share on X/Twitter"
        >
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
            <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723 10.1 10.1 0 01-3.127 1.184 4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.937 4.937 0 004.604 3.417 9.868 9.868 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63a9.936 9.936 0 002.46-2.548l-.047-.02z"/>
          </svg>
        </button>
        
        <!-- LinkedIn Share Button -->
        <button 
          @click="shareToLinkedIn()"
          class="w-12 h-12 rounded-full bg-[#0e76a8] text-white flex items-center justify-center hover:bg-opacity-90 transition-colors"
          aria-label="Share on LinkedIn"
        >
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="currentColor">
            <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
          </svg>
        </button>
        
        <!-- Copy Link Button -->
        <button 
          @click="copyLink()"
          class="w-12 h-12 rounded-full bg-gray-700 text-white flex items-center justify-center hover:bg-gray-800 transition-colors"
          aria-label="Copy link"
        >
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path>
            <path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>
          </svg>
        </button>
      </div>
      
      <!-- Copy feedback message -->
      <div x-show="copySuccess" class="mt-4 text-center text-sm text-green-600">Link copied to clipboard!</div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('alpine:init', () => {
  // Search functionality
  window.Alpine.data('search', () => ({
    isSearching: false,
    
    handleSearch(event) {
      event.preventDefault();
      const form = event.target;
      const searchInput = form.querySelector('input[name="search"]');
      const searchValue = searchInput.value.trim();
      
      // Get current URL parameters
      const url = new URL(window.location.href);
      
      if (searchValue) {
        url.searchParams.set('search', searchValue);
      } else {
        url.searchParams.delete('search');
      }
      
      window.location.href = url.toString();
    },
    
    clearSearch() {
      // Get current URL parameters
      const url = new URL(window.location.href);
      url.searchParams.delete('search');
      window.location.href = url.toString();
    }
  }));
  
  // Share modal functionality
  window.Alpine.data('shareModal', () => ({
    isOpen: false,
    postId: null,
    postTitle: '',
    copySuccess: false,
    
    openModal(detail) {
      this.isOpen = true;
      this.postId = detail.postId;
      this.postTitle = detail.postTitle;
      this.copySuccess = false;
    },
    
    shareToFacebook() {
      const url = `${window.location.origin}/blog/${this.postId}`;
      window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`, '_blank');
    },
    
    shareToTwitter() {
      const url = `${window.location.origin}/blog/${this.postId}`;
      window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(this.postTitle)}&url=${encodeURIComponent(url)}`, '_blank');
    },
    
    shareToLinkedIn() {
      const url = `${window.location.origin}/blog/${this.postId}`;
      window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(url)}`, '_blank');
    },
    
    copyLink() {
      const url = `${window.location.origin}/blog/${this.postId}`;
      navigator.clipboard.writeText(url).then(() => {
        this.copySuccess = true;
        setTimeout(() => {
          this.copySuccess = false;
        }, 2000);
      });
    }
  }));
});

</script>

<style>
.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}

[x-cloak] { display: none !important; }
mark.bg-yellow-200 {
  padding: 0.1em 0;
  background-color: #fef08a;
  border-radius: 0.2em;
}
</style>